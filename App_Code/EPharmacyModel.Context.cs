//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;

public partial class EPharmacy027Entities : DbContext
{
    public EPharmacy027Entities()
        : base("name=EPharmacy027Entities")
    {
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public DbSet<tblAdmin> tblAdmins { get; set; }
    public DbSet<tblCategory> tblCategories { get; set; }
    public DbSet<tblCompany> tblCompanies { get; set; }
    public DbSet<tblProduct> tblProducts { get; set; }

    public virtual ObjectResult<AllProducts_Result> AllProducts()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllProducts_Result>("AllProducts");
    }

    public virtual int CategoryDelete(Nullable<int> catId)
    {
        var catIdParameter = catId.HasValue ?
            new ObjectParameter("CatId", catId) :
            new ObjectParameter("CatId", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CategoryDelete", catIdParameter);
    }

    public virtual int DeleteCategory()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCategory");
    }

    public virtual int DeleteCompany(Nullable<int> companyId)
    {
        var companyIdParameter = companyId.HasValue ?
            new ObjectParameter("companyId", companyId) :
            new ObjectParameter("companyId", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCompany", companyIdParameter);
    }

    public virtual int DeleteProduct(Nullable<int> productId)
    {
        var productIdParameter = productId.HasValue ?
            new ObjectParameter("ProductId", productId) :
            new ObjectParameter("ProductId", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProduct", productIdParameter);
    }

    public virtual int DoAdminDelete(Nullable<int> adminId)
    {
        var adminIdParameter = adminId.HasValue ?
            new ObjectParameter("adminId", adminId) :
            new ObjectParameter("adminId", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DoAdminDelete", adminIdParameter);
    }

    public virtual ObjectResult<DoAdminLogin_Result> DoAdminLogin(string email, string password)
    {
        var emailParameter = email != null ?
            new ObjectParameter("email", email) :
            new ObjectParameter("email", typeof(string));

        var passwordParameter = password != null ?
            new ObjectParameter("password", password) :
            new ObjectParameter("password", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoAdminLogin_Result>("DoAdminLogin", emailParameter, passwordParameter);
    }

    public virtual ObjectResult<GetAdmins_Result> GetAdmins()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAdmins_Result>("GetAdmins");
    }

    public virtual ObjectResult<GetAllCategories_Result> GetAllCategories()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCategories_Result>("GetAllCategories");
    }

    public virtual ObjectResult<GetCategories_Result> GetCategories()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategories_Result>("GetCategories");
    }

    public virtual ObjectResult<GetCompanies_Result> GetCompanies()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompanies_Result>("GetCompanies");
    }
}
